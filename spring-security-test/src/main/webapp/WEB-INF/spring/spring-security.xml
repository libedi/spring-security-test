<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/security" 
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security.xsd">
	
	<!-- 확장자를 이용해 패턴을 걸때는 /**/*.해당확장자 로 할 것 (Ant Pattern 규칙) -->
	<http pattern="/**/*.js" security="none"/>
	<http pattern="/**/*.css" security="none"/>
	<http pattern="/images/*" security="none"/>

	<!--
		auto-config="true" 는 form 인증, 클라이언트 basic 인증, logout 에 대한 기본적인 셋팅이 자동으로 설정
		<http>
			<form-login/>
			<http-basic/>
			<logout>
		</http> 
	 -->
	<http auto-config="true" use-expressions="true">
		<!-- 
			intercept-url 은 권한 설정.
			구체적인 URL 패턴을 먼저 설정하는 순서로 설정해야함.
		-->
<!-- 		<intercept-url pattern="/admin/**" access="ROLE_ADMIN"/> -->
<!-- 		<intercept-url pattern="/login.do" access="ROLE_ANONYMOUS"/> -->
<!-- 		<intercept-url pattern="/main.do" access="ROLE_ANONYMOUS,ROLE_USER,ROLE_ADMIN"/> -->
<!-- 		<intercept-url pattern="/**" access="ROLE_ANONYMOUS,ROLE_USER,ROLE_ADMIN"/> -->

		<!-- 일일이 권한을 적어줄 수 없으니까, use-expressions="true" 로 아래 SPRING EL을 사용한다. -->
		<intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')"/>
		<intercept-url pattern="/login.do" access="isAnonymous()"/>
		<intercept-url pattern="/main.do" access="permitAll"/>
		<intercept-url pattern="/**" access="permitAll"/>
<!-- 		<form-login -->
<!-- 			username-parameter="loginid" -->
<!-- 			password-parameter="loginpw" -->
<!-- 			login-page="/login.do" -->
<!-- 			default-target-url="/main.do" -->
<!-- 			authentication-failure-url="/login.do?fail=true" -->
<!-- 			authentication-success-handler-ref="customAuthenticationSuccessHandler" -->
<!-- 		/> -->
		<form-login
			username-parameter="loginid"
			password-parameter="loginpw"
			login-page="/login.do"
			default-target-url="/main.do"
			authentication-success-handler-ref="customAuthenticationSuccessHandler"
			authentication-failure-handler-ref="customAuthenticationFailureHandler"
		/>
		<logout
			logout-success-url="/main.do"
			delete-cookies="JSESSIONID"
		/>
	</http>
	
	<authentication-manager>
<!-- 		<authentication-provider> -->
<!-- 			<user-service> -->
<!-- 				<user name="user1" password="user1password" authorities="ROLE_USER"/> -->
<!-- 				<user name="admin1" password="admin1password" authorities="ROLE_ADMIN"/> -->
<!-- 			</user-service> -->
<!-- 		</authentication-provider> -->
		<authentication-provider user-service-ref="customJdbcDaoImpl"/>
	</authentication-manager>
	
	<beans:bean id="customJdbcDaoImpl" class="com.libedi.mytest.jdbc.dao.CustomJdbcDaoImpl">
		<beans:property name="dataSource" ref="dataSource"/>
		<beans:property name="rolePrefix" value=""/>
		<beans:property name="usersByUsernameQuery" value="SELECT ID, PASSWORD, NAME FROM MEMBERINFO WHERE ID=?"/>
		<beans:property name="authoritiesByUsernameQuery" value="SELECT ID FROM MEMBER_AUTHORITY WHERE ID=?"/>
		<beans:property name="enableGroups" value="false"/>
	</beans:bean>
	
	<beans:bean id="customAuthenticationSuccessHandler" class="com.libedi.mytest.security.handler.CustomAuthenticationSuccessHandler">
		<beans:property name="targetUrlParameter" value="loginRedirect"/>
		<beans:property name="defaultUrl" value="/main.do"/>
		<beans:property name="useReferer" value="false"/>
	</beans:bean>
	
	<beans:bean id="customAuthenticationFailureHandler" class="com.libedi.mytest.security.handler.CustomAuthenticationFailureHandler">
		<beans:property name="loginIdName" value="loginid"/>
		<beans:property name="loginPasswordName" value="loginpw"/>
		<beans:property name="loginRedirectName" value="loginRedirect"/>
		<beans:property name="exceptionMsgName" value="securityExceptionMsg"/>
		<beans:property name="defaultFailureUrl" value="/login.do?fail=true"/>
	</beans:bean>
	
</beans:beans>

